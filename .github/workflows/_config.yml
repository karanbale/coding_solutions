theme: jekyll-theme-hacker

stages:
  - test
  - build

# klockwork:
#   stage: test
#   script:
#     - export REPO_PATH=$PWD
#     - export PATH=$REPO_PATH/scripts/klocwork-checker:/home/klocwork/bin:$PATH
#     - ./scripts/run-klocwork.sh
#     - mv build/kw-checker.log .
#   artifacts:
#     when: always
#     expose_as: 'Klocwork scan'
#     paths: [ 'kw-checker.log' ]

unit tests:
  stage: test
  script:
    - mkdir -p build
    - cd build
    - cmake -DBUILD_VERSION=$(CI_PIPELINE_IID)
    - make
    - ctest --output-on-failure | tee tests.txt
  artifacts:
    when: always
    expose_as: 'Unit tests results'
    paths: [ 'tests.txt']

static library:
  stage: build
  script:
    - mkdir -p build
    - cd build
    - cmake -DBUILD_VERSION=$(CI_PIPELINE_IID)
    - make c_python_algorithm
    - cp c_python_algorithm.a ../
  artifacts:
    paths:
    - c_python_algorithm.a
  
shared library:
  stage: build
  script:
    - mkdir -p build
    - cd build
    - cmake -DBUILD_VERSION=$(CI_PIPELINE_IID)
    - make c_python_algorithm
    - cp c_python_algorithm.so ../
  artifacts:
    paths:
      - c_python_algorithm.so

pages:
  stage: deploy
  script:
    - mkdir -p build
    - cd build
    - mkdir -p ../public/
    - cp -r docs/html/* ../public/
  artifacts:
    paths:
      - public
  only:
    - master
